(()=>{var n={275:(n,e,t)=>{"use strict";t.d(e,{A:()=>s});var A=t(354),i=t.n(A),r=t(314),o=t.n(r)()(i());o.push([n.id,"/*\n! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com\n*//*\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\n*/\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: #e5e7eb; /* 2 */\n}\n\n::before,\n::after {\n  --tw-content: '';\n}\n\n/*\n1. Use a consistent sensible line-height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n3. Use a more readable tab size.\n4. Use the user's configured `sans` font-family by default.\n5. Use the user's configured `sans` font-feature-settings by default.\n6. Use the user's configured `sans` font-variation-settings by default.\n7. Disable tap highlights on iOS\n*/\n\nhtml,\n:host {\n  line-height: 1.5; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n  -moz-tab-size: 4; /* 3 */\n  -o-tab-size: 4;\n     tab-size: 4; /* 3 */\n  font-family: ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; /* 4 */\n  font-feature-settings: normal; /* 5 */\n  font-variation-settings: normal; /* 6 */\n  -webkit-tap-highlight-color: transparent; /* 7 */\n}\n\n/*\n1. Remove the margin in all browsers.\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\n*/\n\nbody {\n  margin: 0; /* 1 */\n  line-height: inherit; /* 2 */\n}\n\n/*\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n3. Ensure horizontal rules are visible by default.\n*/\n\nhr {\n  height: 0; /* 1 */\n  color: inherit; /* 2 */\n  border-top-width: 1px; /* 3 */\n}\n\n/*\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr:where([title]) {\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n}\n\n/*\nRemove the default font size and weight for headings.\n*/\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/*\nReset links to optimize for opt-in styling instead of opt-out.\n*/\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/*\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/*\n1. Use the user's configured `mono` font-family by default.\n2. Use the user's configured `mono` font-feature-settings by default.\n3. Use the user's configured `mono` font-variation-settings by default.\n4. Correct the odd `em` font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace; /* 1 */\n  font-feature-settings: normal; /* 2 */\n  font-variation-settings: normal; /* 3 */\n  font-size: 1em; /* 4 */\n}\n\n/*\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/*\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n3. Remove gaps between table borders by default.\n*/\n\ntable {\n  text-indent: 0; /* 1 */\n  border-color: inherit; /* 2 */\n  border-collapse: collapse; /* 3 */\n}\n\n/*\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n3. Remove default padding in all browsers.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-feature-settings: inherit; /* 1 */\n  font-variation-settings: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  font-weight: inherit; /* 1 */\n  line-height: inherit; /* 1 */\n  letter-spacing: inherit; /* 1 */\n  color: inherit; /* 1 */\n  margin: 0; /* 2 */\n  padding: 0; /* 3 */\n}\n\n/*\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Remove default button styles.\n*/\n\nbutton,\ninput:where([type='button']),\ninput:where([type='reset']),\ninput:where([type='submit']) {\n  -webkit-appearance: button; /* 1 */\n  background-color: transparent; /* 2 */\n  background-image: none; /* 2 */\n}\n\n/*\nUse the modern Firefox focus style for all focusable elements.\n*/\n\n:-moz-focusring {\n  outline: auto;\n}\n\n/*\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\n*/\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/*\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/*\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/*\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/*\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to `inherit` in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/*\nRemoves the default spacing and border for appropriate elements.\n*/\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nlegend {\n  padding: 0;\n}\n\nol,\nul,\nmenu {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/*\nReset default styling for dialogs.\n*/\ndialog {\n  padding: 0;\n}\n\n/*\nPrevent resizing textareas horizontally by default.\n*/\n\ntextarea {\n  resize: vertical;\n}\n\n/*\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\n2. Set the default placeholder color to the user's configured gray 400 color.\n*/\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1; /* 1 */\n  color: #9ca3af; /* 2 */\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1; /* 1 */\n  color: #9ca3af; /* 2 */\n}\n\n/*\nSet the default cursor for buttons.\n*/\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\n/*\nMake sure disabled buttons don't get the pointer cursor.\n*/\n:disabled {\n  cursor: default;\n}\n\n/*\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\n   This can trigger a poorly considered lint error in some tools but is included by design.\n*/\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block; /* 1 */\n  vertical-align: middle; /* 2 */\n}\n\n/*\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\n*/\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/* Make elements with the HTML hidden attribute stay hidden by default */\n[hidden] {\n  display: none;\n}\n\n*, ::before, ::after {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n  --tw-contain-size:  ;\n  --tw-contain-layout:  ;\n  --tw-contain-paint:  ;\n  --tw-contain-style:  ;\n}\n\n::backdrop {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgb(59 130 246 / 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n  --tw-contain-size:  ;\n  --tw-contain-layout:  ;\n  --tw-contain-paint:  ;\n  --tw-contain-style:  ;\n}\n.fixed {\n  position: fixed;\n}\n.m-2 {\n  margin: 0.5rem;\n}\n.mx-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n.my-10 {\n  margin-top: 2.5rem;\n  margin-bottom: 2.5rem;\n}\n.ml-\\[50\\%\\] {\n  margin-left: 50%;\n}\n.mr-8 {\n  margin-right: 2rem;\n}\n.mt-6 {\n  margin-top: 1.5rem;\n}\n.mt-9 {\n  margin-top: 2.25rem;\n}\n.mt-\\[25\\%\\] {\n  margin-top: 25%;\n}\n.flex {\n  display: flex;\n}\n.hidden {\n  display: none;\n}\n.h-full {\n  height: 100%;\n}\n.w-full {\n  width: 100%;\n}\n.min-w-\\[368px\\] {\n  min-width: 368px;\n}\n.translate-x-\\[-50\\%\\] {\n  --tw-translate-x: -50%;\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n.flex-col {\n  flex-direction: column;\n}\n.flex-wrap {\n  flex-wrap: wrap;\n}\n.items-center {\n  align-items: center;\n}\n.justify-evenly {\n  justify-content: space-evenly;\n}\n.gap-5 {\n  gap: 1.25rem;\n}\n.gap-8 {\n  gap: 2rem;\n}\n.gap-\\[1\\.5rem\\] {\n  gap: 1.5rem;\n}\n.overflow-auto {\n  overflow: auto;\n}\n.rounded-lg {\n  border-radius: 0.5rem;\n}\n.rounded-md {\n  border-radius: 0.375rem;\n}\n.border {\n  border-width: 1px;\n}\n.border-solid {\n  border-style: solid;\n}\n.border-red-700 {\n  --tw-border-opacity: 1;\n  border-color: rgb(185 28 28 / var(--tw-border-opacity));\n}\n.bg-cyan-700 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(14 116 144 / var(--tw-bg-opacity));\n}\n.bg-slate-400 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(148 163 184 / var(--tw-bg-opacity));\n}\n.p-2 {\n  padding: 0.5rem;\n}\n.px-1 {\n  padding-left: 0.25rem;\n  padding-right: 0.25rem;\n}\n.px-3 {\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n}\n.text-center {\n  text-align: center;\n}\n.text-2xl {\n  font-size: 1.5rem;\n  line-height: 2rem;\n}\n.text-4xl {\n  font-size: 2.25rem;\n  line-height: 2.5rem;\n}\n.text-lg {\n  font-size: 1.125rem;\n  line-height: 1.75rem;\n}\n.text-xl {\n  font-size: 1.25rem;\n  line-height: 1.75rem;\n}\n\n#mainContainer {\n    scroll-behavior: smooth;\n}\n\n#playerField,\n#computerField,\n.shipPlacementBoard {\n    grid-template-columns: repeat(10, minmax(50px, 1fr));\n    gap: 2px;\n    position: relative;\n}\n\n.grid-item {\n    height: 50px;\n    width: 50px;\n    border: solid white 0.1px;\n    position: relative;\n}\n\n#computerField:not(.game-over) .grid-item:hover {\n    background-color: rgba(54, 206, 54, 0.5);\n    cursor: pointer;\n}\n\n#computerField:not(.game-over) .used-item:hover {\n    background-color: transparent;\n    cursor: not-allowed;\n}\n\n#playerField:hover {\n    cursor: not-allowed;\n}\n\n.game-over {\n    pointer-events: none;\n}\n\n.overlay {\n    position: absolute;\n    z-index: -1;\n}\n\n.length3Ship {\n    -o-object-fit: cover;\n       object-fit: cover;\n    width: 125px;\n}\n\n.length4Ship {\n    width: 185px;\n}\n\n.length5Ship {\n    width: 225px;\n}\n\n.length2Ship {\n    width: 100px;\n    height: 50px !important;\n}\n\n.shot-hit,\n.shot-missed {\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n.shot-missed {\n    background-color: #ffffffd6;\n}\n\n.shot-hit {\n    background-color: red;\n    opacity: 0.7;\n}\n\n.good-placement {\n    background-color: yellow;\n    cursor: pointer;\n}\n\n.bad-placement {\n    background-color: red;\n    cursor: not-allowed;\n}\n\n.manualShipPlacementContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1.5rem;\n    width: 100%;\n}\n\n.axis-button {\n    background-color: peachpuff;\n    height: 50px;\n    border-radius: 10px;\n    width: 150px;\n}\n\n#endOfGameContainer {\n    position: absolute;\n    flex-direction: column;\n    font-size: 1.5rem;\n    background-color: inherit;\n    left: 50%;\n    transform: translateX(-50%);\n    min-width: -moz-max-content;\n    min-width: max-content;\n    align-items: center;\n}\n\ndiv#endOfGameOptions button {\n    background-color: #2875b2;\n    height: 60px;\n    width: 150px;\n    border-radius: 8px;\n    border: 1px solid black;\n}\n\n.manualShipPlacementBoard {\n    display: flex;\n    position: relative;\n}\n\n.practice {\n    position: absolute;\n    left: 525px;\n    width: 225px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    top: 50%;\n    height: 100%;\n    transform: translateY(-50%);\n}\n\n.practice * {\n    margin: 0 auto;\n}\n\n.manualShipPlaceholders {\n    scale: 0.9;\n    cursor: pointer;\n}\n\n.manualShipPlaceholders:hover {\n    scale: 0.95;\n}\n\n.manualShipPlaceholders.selected {\n    scale: 1;\n    filter: drop-shadow(0 0 5px rgb(145, 43, 77));\n}\n\n.manualShipPlaceholders:not(.selected) {\n    opacity: 0.8;\n}\n\n.refreshButton {\n    display: none;\n}\n\n.buttonsContainer {\n    display: flex;\n    gap: 15px;\n    width: 200px;\n    justify-content: center;\n    position: absolute;\n    top: 110%;\n    left: 525px;\n    font-size: 16px;\n}\n\nbutton.refreshButton,\nbutton.randomButton {\n    border: 2px solid black;\n    padding: 6px 12px;\n    border-radius: 45%;\n}\n\nimg.length2Ship.manualShipPlaceholders {\n    grid-column: 1;\n    grid-row: 1;\n}\n\n.length3Ship.manualShipPlaceholders:nth-of-type(2) {\n    grid-column: 3;\n    grid-row: 1;\n}\n\nimg.length4Ship.manualShipPlaceholders {\n    grid-column: 1;\n    grid-row: 2;\n}\n\nimg.length5Ship.manualShipPlaceholders {\n    grid-column: 3;\n    grid-row: 2;\n}\n\n.axisButtonSVG {\n    height: 75%;\n    display: inline;\n}\n\n@media (max-width: 1084px) {\n    #playerField,\n    #computerField,\n    .shipPlacementBoard {\n        grid-template-columns: repeat(10, minmax(35px, 35px));\n    }\n\n    .shot-hit,\n    .shot-missed {\n        width: 15px;\n        height: 15px;\n    }\n\n    .grid-item {\n        height: 35px;\n        width: 35px;\n    }\n\n    .length3Ship {\n        width: 87.5px;\n    }\n\n    .length4Ship {\n        width: 129.5px;\n    }\n\n    .length5Ship {\n        width: 157.5px;\n    }\n\n    .length2Ship {\n        width: 70px;\n        height: 35px !important;\n    }\n\n    .practice {\n        display: grid;\n        grid-template-columns: repeat(3, 130px);\n        grid-template-rows: repeat(2, 50px);\n        align-items: center;\n        top: 102%;\n        left: 50%;\n        transform: translateX(-50%);\n        height: 100px;\n        width: -moz-max-content;\n        width: max-content;\n    }\n\n    .buttonsContainer {\n        top: 150%;\n        left: 50%;\n        transform: translateX(-50%);\n    }\n}\n\n@media (min-width: 1084px) {\n\n  .lg\\:flex-row {\n    flex-direction: row;\n  }\n\n  .lg\\:gap-0 {\n    gap: 0px;\n  }\n\n  .lg\\:text-6xl {\n    font-size: 3.75rem;\n    line-height: 1;\n  }\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;CAAc,CAAd;;;CAAc;;AAAd;;;EAAA,sBAAc,EAAd,MAAc;EAAd,eAAc,EAAd,MAAc;EAAd,mBAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;AAAA;;AAAd;;EAAA,gBAAc;AAAA;;AAAd;;;;;;;;CAAc;;AAAd;;EAAA,gBAAc,EAAd,MAAc;EAAd,8BAAc,EAAd,MAAc;EAAd,gBAAc,EAAd,MAAc;EAAd,cAAc;KAAd,WAAc,EAAd,MAAc;EAAd,+HAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,+BAAc,EAAd,MAAc;EAAd,wCAAc,EAAd,MAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,SAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;AAAA;;AAAd;;;;CAAc;;AAAd;EAAA,SAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,yCAAc;UAAd,iCAAc;AAAA;;AAAd;;CAAc;;AAAd;;;;;;EAAA,kBAAc;EAAd,oBAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,cAAc;EAAd,wBAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,mBAAc;AAAA;;AAAd;;;;;CAAc;;AAAd;;;;EAAA,+GAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,+BAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,cAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,cAAc;EAAd,cAAc;EAAd,kBAAc;EAAd,wBAAc;AAAA;;AAAd;EAAA,eAAc;AAAA;;AAAd;EAAA,WAAc;AAAA;;AAAd;;;;CAAc;;AAAd;EAAA,cAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;EAAd,yBAAc,EAAd,MAAc;AAAA;;AAAd;;;;CAAc;;AAAd;;;;;EAAA,oBAAc,EAAd,MAAc;EAAd,8BAAc,EAAd,MAAc;EAAd,gCAAc,EAAd,MAAc;EAAd,eAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;EAAd,uBAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;EAAd,SAAc,EAAd,MAAc;EAAd,UAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,oBAAc;AAAA;;AAAd;;;CAAc;;AAAd;;;;EAAA,0BAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,sBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,aAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,gBAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,wBAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,YAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,6BAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,wBAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,0BAAc,EAAd,MAAc;EAAd,aAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,kBAAc;AAAA;;AAAd;;CAAc;;AAAd;;;;;;;;;;;;;EAAA,SAAc;AAAA;;AAAd;EAAA,SAAc;EAAd,UAAc;AAAA;;AAAd;EAAA,UAAc;AAAA;;AAAd;;;EAAA,gBAAc;EAAd,SAAc;EAAd,UAAc;AAAA;;AAAd;;CAAc;AAAd;EAAA,UAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,gBAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,UAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;EAAA,UAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,eAAc;AAAA;;AAAd;;CAAc;AAAd;EAAA,eAAc;AAAA;;AAAd;;;;CAAc;;AAAd;;;;;;;;EAAA,cAAc,EAAd,MAAc;EAAd,sBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,eAAc;EAAd,YAAc;AAAA;;AAAd,wEAAc;AAAd;EAAA,aAAc;AAAA;;AAAd;EAAA,wBAAc;EAAd,wBAAc;EAAd,mBAAc;EAAd,mBAAc;EAAd,cAAc;EAAd,cAAc;EAAd,cAAc;EAAd,eAAc;EAAd,eAAc;EAAd,aAAc;EAAd,aAAc;EAAd,kBAAc;EAAd,sCAAc;EAAd,8BAAc;EAAd,6BAAc;EAAd,4BAAc;EAAd,eAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,kBAAc;EAAd,2BAAc;EAAd,4BAAc;EAAd,sCAAc;EAAd,kCAAc;EAAd,2BAAc;EAAd,sBAAc;EAAd,8BAAc;EAAd,YAAc;EAAd,kBAAc;EAAd,gBAAc;EAAd,iBAAc;EAAd,kBAAc;EAAd,cAAc;EAAd,gBAAc;EAAd,aAAc;EAAd,mBAAc;EAAd,qBAAc;EAAd,2BAAc;EAAd,yBAAc;EAAd,0BAAc;EAAd,2BAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,yBAAc;EAAd,sBAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd;AAAc;;AAAd;EAAA,wBAAc;EAAd,wBAAc;EAAd,mBAAc;EAAd,mBAAc;EAAd,cAAc;EAAd,cAAc;EAAd,cAAc;EAAd,eAAc;EAAd,eAAc;EAAd,aAAc;EAAd,aAAc;EAAd,kBAAc;EAAd,sCAAc;EAAd,8BAAc;EAAd,6BAAc;EAAd,4BAAc;EAAd,eAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,kBAAc;EAAd,2BAAc;EAAd,4BAAc;EAAd,sCAAc;EAAd,kCAAc;EAAd,2BAAc;EAAd,sBAAc;EAAd,8BAAc;EAAd,YAAc;EAAd,kBAAc;EAAd,gBAAc;EAAd,iBAAc;EAAd,kBAAc;EAAd,cAAc;EAAd,gBAAc;EAAd,aAAc;EAAd,mBAAc;EAAd,qBAAc;EAAd,2BAAc;EAAd,yBAAc;EAAd,0BAAc;EAAd,2BAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,yBAAc;EAAd,sBAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd;AAAc;AAEd;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;;AAEnB;IACI,uBAAuB;AAC3B;;AAEA;;;IAGI,oDAAoD;IACpD,QAAQ;IACR,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,yBAAyB;IACzB,kBAAkB;AACtB;;AAEA;IACI,wCAAwC;IACxC,eAAe;AACnB;;AAEA;IACI,6BAA6B;IAC7B,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,oBAAiB;OAAjB,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;;IAEI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;AACpC;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,qBAAqB;IACrB,YAAY;AAChB;;AAEA;IACI,wBAAwB;IACxB,eAAe;AACnB;;AAEA;IACI,qBAAqB;IACrB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,WAAW;IACX,WAAW;AACf;;AAEA;IACI,2BAA2B;IAC3B,YAAY;IACZ,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,sBAAsB;IACtB,iBAAiB;IACjB,yBAAyB;IACzB,SAAS;IACT,2BAA2B;IAC3B,2BAAsB;IAAtB,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,6BAA6B;IAC7B,mBAAmB;IACnB,QAAQ;IACR,YAAY;IACZ,2BAA2B;AAC/B;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,QAAQ;IACR,6CAA6C;AACjD;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,YAAY;IACZ,uBAAuB;IACvB,kBAAkB;IAClB,SAAS;IACT,WAAW;IACX,eAAe;AACnB;;AAEA;;IAEI,uBAAuB;IACvB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,WAAW;AACf;;AAEA;IACI,cAAc;IACd,WAAW;AACf;;AAEA;IACI,cAAc;IACd,WAAW;AACf;;AAEA;IACI,cAAc;IACd,WAAW;AACf;;AAEA;IACI,WAAW;IACX,eAAe;AACnB;;AAEA;IACI;;;QAGI,qDAAqD;IACzD;;IAEA;;QAEI,WAAW;QACX,YAAY;IAChB;;IAEA;QACI,YAAY;QACZ,WAAW;IACf;;IAEA;QACI,aAAa;IACjB;;IAEA;QACI,cAAc;IAClB;;IAEA;QACI,cAAc;IAClB;;IAEA;QACI,WAAW;QACX,uBAAuB;IAC3B;;IAEA;QACI,aAAa;QACb,uCAAuC;QACvC,mCAAmC;QACnC,mBAAmB;QACnB,SAAS;QACT,SAAS;QACT,2BAA2B;QAC3B,aAAa;QACb,uBAAkB;QAAlB,kBAAkB;IACtB;;IAEA;QACI,SAAS;QACT,SAAS;QACT,2BAA2B;IAC/B;AACJ;;AA3QA;;EAAA;IAAA;EA4QA;;EA5QA;IAAA;EA4QA;;EA5QA;IAAA,kBA4QA;IA5QA;EA4QA;AAAA",sourcesContent:["@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n#mainContainer {\n    scroll-behavior: smooth;\n}\n\n#playerField,\n#computerField,\n.shipPlacementBoard {\n    grid-template-columns: repeat(10, minmax(50px, 1fr));\n    gap: 2px;\n    position: relative;\n}\n\n.grid-item {\n    height: 50px;\n    width: 50px;\n    border: solid white 0.1px;\n    position: relative;\n}\n\n#computerField:not(.game-over) .grid-item:hover {\n    background-color: rgba(54, 206, 54, 0.5);\n    cursor: pointer;\n}\n\n#computerField:not(.game-over) .used-item:hover {\n    background-color: transparent;\n    cursor: not-allowed;\n}\n\n#playerField:hover {\n    cursor: not-allowed;\n}\n\n.game-over {\n    pointer-events: none;\n}\n\n.overlay {\n    position: absolute;\n    z-index: -1;\n}\n\n.length3Ship {\n    object-fit: cover;\n    width: 125px;\n}\n\n.length4Ship {\n    width: 185px;\n}\n\n.length5Ship {\n    width: 225px;\n}\n\n.length2Ship {\n    width: 100px;\n    height: 50px !important;\n}\n\n.shot-hit,\n.shot-missed {\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n.shot-missed {\n    background-color: #ffffffd6;\n}\n\n.shot-hit {\n    background-color: red;\n    opacity: 0.7;\n}\n\n.good-placement {\n    background-color: yellow;\n    cursor: pointer;\n}\n\n.bad-placement {\n    background-color: red;\n    cursor: not-allowed;\n}\n\n.manualShipPlacementContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1.5rem;\n    width: 100%;\n}\n\n.axis-button {\n    background-color: peachpuff;\n    height: 50px;\n    border-radius: 10px;\n    width: 150px;\n}\n\n#endOfGameContainer {\n    position: absolute;\n    flex-direction: column;\n    font-size: 1.5rem;\n    background-color: inherit;\n    left: 50%;\n    transform: translateX(-50%);\n    min-width: max-content;\n    align-items: center;\n}\n\ndiv#endOfGameOptions button {\n    background-color: #2875b2;\n    height: 60px;\n    width: 150px;\n    border-radius: 8px;\n    border: 1px solid black;\n}\n\n.manualShipPlacementBoard {\n    display: flex;\n    position: relative;\n}\n\n.practice {\n    position: absolute;\n    left: 525px;\n    width: 225px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    top: 50%;\n    height: 100%;\n    transform: translateY(-50%);\n}\n\n.practice * {\n    margin: 0 auto;\n}\n\n.manualShipPlaceholders {\n    scale: 0.9;\n    cursor: pointer;\n}\n\n.manualShipPlaceholders:hover {\n    scale: 0.95;\n}\n\n.manualShipPlaceholders.selected {\n    scale: 1;\n    filter: drop-shadow(0 0 5px rgb(145, 43, 77));\n}\n\n.manualShipPlaceholders:not(.selected) {\n    opacity: 0.8;\n}\n\n.refreshButton {\n    display: none;\n}\n\n.buttonsContainer {\n    display: flex;\n    gap: 15px;\n    width: 200px;\n    justify-content: center;\n    position: absolute;\n    top: 110%;\n    left: 525px;\n    font-size: 16px;\n}\n\nbutton.refreshButton,\nbutton.randomButton {\n    border: 2px solid black;\n    padding: 6px 12px;\n    border-radius: 45%;\n}\n\nimg.length2Ship.manualShipPlaceholders {\n    grid-column: 1;\n    grid-row: 1;\n}\n\n.length3Ship.manualShipPlaceholders:nth-of-type(2) {\n    grid-column: 3;\n    grid-row: 1;\n}\n\nimg.length4Ship.manualShipPlaceholders {\n    grid-column: 1;\n    grid-row: 2;\n}\n\nimg.length5Ship.manualShipPlaceholders {\n    grid-column: 3;\n    grid-row: 2;\n}\n\n.axisButtonSVG {\n    height: 75%;\n    display: inline;\n}\n\n@media (max-width: 1084px) {\n    #playerField,\n    #computerField,\n    .shipPlacementBoard {\n        grid-template-columns: repeat(10, minmax(35px, 35px));\n    }\n\n    .shot-hit,\n    .shot-missed {\n        width: 15px;\n        height: 15px;\n    }\n\n    .grid-item {\n        height: 35px;\n        width: 35px;\n    }\n\n    .length3Ship {\n        width: 87.5px;\n    }\n\n    .length4Ship {\n        width: 129.5px;\n    }\n\n    .length5Ship {\n        width: 157.5px;\n    }\n\n    .length2Ship {\n        width: 70px;\n        height: 35px !important;\n    }\n\n    .practice {\n        display: grid;\n        grid-template-columns: repeat(3, 130px);\n        grid-template-rows: repeat(2, 50px);\n        align-items: center;\n        top: 102%;\n        left: 50%;\n        transform: translateX(-50%);\n        height: 100px;\n        width: max-content;\n    }\n\n    .buttonsContainer {\n        top: 150%;\n        left: 50%;\n        transform: translateX(-50%);\n    }\n}\n"],sourceRoot:""}]);const s=o},314:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",A=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),A&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),A&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,A,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(A)for(var s=0;s<this.length;s++){var a=this[s][0];null!=a&&(o[a]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);A&&o[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),e.push(d))}},e}},354:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),r="/*# ".concat(i," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},985:(n,e,t)=>{"use strict";var A=t(158),i=t(699);n.exports=function(n){var e=(n=n||{}).sigint,t=n.eot,r=n.autocomplete=n.autocomplete||function(){return[]},o=n.history;return s.history=o||{save:function(){}},s.hide=function(n){return s(n,{echo:""})},s;function s(n,i,s){var c,d,l=0,p=0;s=s||{},Object(n)===n?n=(s=n).ask:Object(i)===i&&(i=(s=i).value),n=n||"";var h=s.echo,m="echo"in s;r=s.autocomplete||r;var u="win32"===process.platform?process.stdin.fd:A.openSync("/dev/tty","rs"),g=process.stdin.isRaw;g||process.stdin.setRawMode&&process.stdin.setRawMode(!0);var f,B,E=Buffer.alloc(3),y="";d="",n&&process.stdout.write(n);for(var w=0;;)if((B=A.readSync(u,E,0,3))>1)switch(E.toString()){case"[A":if(m)break;if(!o)break;if(o.atStart())break;o.atEnd()&&(d=y,p=l),l=(y=o.prev()).length,process.stdout.write("[2K[0G"+n+y);break;case"[B":if(m)break;if(!o)break;if(o.pastEnd())break;o.atPenultimate()?(y=d,l=p,o.next()):l=(y=o.next()).length,process.stdout.write("[2K[0G"+n+y+"["+(l+n.length+1)+"G");break;case"[D":if(m)break;l-(l=--l<0?0:l)&&process.stdout.write("[1D");break;case"[C":if(m)break;l=++l>y.length?y.length:l,process.stdout.write("["+(l+n.length+1)+"G");break;default:E.toString()&&(a(m,n,h,y=(y+=E.toString()).replace(/\0/g,""),l=y.length),process.stdout.write("["+(l+n.length+1)+"G"),E=Buffer.alloc(3))}else{if(3==(f=E[B-1]))return process.stdout.write("^C\n"),A.closeSync(u),e&&process.exit(130),process.stdin.setRawMode&&process.stdin.setRawMode(g),null;if(4==f&&0==y.length&&t&&(process.stdout.write("exit\n"),process.exit(0)),13==f){if(A.closeSync(u),!o)break;!m&&y.length&&o.push(y),o.reset();break}if(9==f){if(y==(c=r(y))[0]?c=r(""):c.length,0==c.length){process.stdout.write("\t");continue}var b=c[w++]||c[(w=0,w++)];b&&(process.stdout.write("\r[K"+n+b),y=b,l=b.length)}if(127==f||"win32"==process.platform&&8==f){if(!l)continue;y=y.slice(0,l-1)+y.slice(l),l--,process.stdout.write("[2D")}else{if(f<32||f>126)continue;y=y.slice(0,l)+String.fromCharCode(f)+y.slice(l),l++}a(m,n,h,y,l)}return process.stdout.write("\n"),process.stdin.setRawMode&&process.stdin.setRawMode(g),y||i||""}function a(n,e,t,A,r){if(n)process.stdout.write("[2K[0G"+e+Array(A.length+1).join(t));else{process.stdout.write("[s"),r==A.length||e?process.stdout.write("[2K[0G"+e+A):process.stdout.write("[2K[0G"+A+"["+(A.length-r)+"D");var o=i(e).length;process.stdout.write(`[${o+1+(""==t?0:r)}G`)}}}},644:n=>{"use strict";n.exports=n=>{n=Object.assign({onlyFirst:!1},n);const e=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(e,n.onlyFirst?void 0:"g")}},699:(n,e,t)=>{"use strict";const A=t(644),i=n=>"string"==typeof n?n.replace(A(),""):n;n.exports=i,n.exports.default=i},72:n=>{"use strict";var e=[];function t(n){for(var t=-1,A=0;A<e.length;A++)if(e[A].identifier===n){t=A;break}return t}function A(n,A){for(var r={},o=[],s=0;s<n.length;s++){var a=n[s],c=A.base?a[0]+A.base:a[0],d=r[c]||0,l="".concat(c," ").concat(d);r[c]=d+1;var p=t(l),h={css:a[1],media:a[2],sourceMap:a[3],supports:a[4],layer:a[5]};if(-1!==p)e[p].references++,e[p].updater(h);else{var m=i(h,A);A.byIndex=s,e.splice(s,0,{identifier:l,updater:m,references:1})}o.push(l)}return o}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var r=A(n=n||[],i=i||{});return function(n){n=n||[];for(var o=0;o<r.length;o++){var s=t(r[o]);e[s].references--}for(var a=A(n,i),c=0;c<r.length;c++){var d=t(r[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}r=a}}},659:n=>{"use strict";var e={};n.exports=function(n,t){var A=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!A)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");A.appendChild(t)}},540:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{"use strict";n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var A="";t.supports&&(A+="@supports (".concat(t.supports,") {")),t.media&&(A+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(A+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),A+=t.css,i&&(A+="}"),t.media&&(A+="}"),t.supports&&(A+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(A+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(A,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},158:()=>{}},e={};function t(A){var i=e[A];if(void 0!==i)return i.exports;var r=e[A]={id:A,exports:{}};return n[A](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var A in e)t.o(e,A)&&!t.o(n,A)&&Object.defineProperty(n,A,{enumerable:!0,get:e[A]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var A=e.getElementsByTagName("script");if(A.length)for(var i=A.length-1;i>-1&&(!n||!/^http(s?):/.test(n));)n=A[i--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{"use strict";var n=t(72),e=t.n(n),A=t(825),i=t.n(A),r=t(659),o=t.n(r),s=t(56),a=t.n(s),c=t(540),d=t.n(c),l=t(113),p=t.n(l),h=t(275),m={};m.styleTagTransform=p(),m.setAttributes=a(),m.insert=o().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=d(),e()(h.A,m),h.A&&h.A.locals&&h.A.locals;const u=t.p+"images/boat.png",g=t.p+"images/length3Ship.svg",f=t.p+"images/length4Ship.png",B=t.p+"images/length5Ship.png",E=class{constructor(n){this.id=this.generateRandomId(),this.length=n,this.sunk=!1,this.hits=0,this.image=null,this.axis=null}generateRandomId(){return Math.floor(9e3*Math.random())+1e3}hit(){this.hits+=1,this.isSunk()}isSunk(){return this.hits===this.length&&(this.sunk=!0,!0)}removeTestShot(){this.hits-=1}get shipImage(){return this.image=document.createElement("img"),3===this.length?(this.image.src=g,this.image.classList.add("length3Ship")):4===this.length?(this.image.src=f,this.image.classList.add("length4Ship")):5===this.length?(this.image.src=B,this.image.classList.add("length5Ship")):(this.image.src=u,this.image.classList.add("length2Ship")),this.image}get shipId(){return this.id}get shipLength(){return this.length}};class y{static makeField(n,e,t,A,i){const r=document.createElement("div");if(r.dataset.x=t,r.dataset.y=A,r.classList.add("grid-item"),e[t][A]instanceof E){const r=e[t][A];let o=i.find((n=>n.vessel===r));if(!o){o={vessel:r,container:document.createElement("div")},o.container.classList.add("overlay"),o.container.dataset.shipId=r.shipId;const{shipImage:n}=r;n.alt="Ship";const e=()=>{const{axis:e,length:i}=r,[s,a,c]=window.innerWidth>=1084?[50,40,25]:[35,25,17],d={2:[0,-29],3:[15.5,-3.5],4:[10.5,-7],5:[16.5,0]};n.style.height=`${a}px`,o.container.appendChild(n),o.container.style.top=`${t*s+5+(t>0?2*t:0)+(e?d[i][1]:0)+(35!==s||e||2!==i?0:-3)+(35===s&&e&&2===i?7:0)}px `,o.container.style.left=`${A*s+(A>0?2*A:0)+(e?c:0)+(e?0:d[i][0])+(e&&2===i?-5:0)+(35===s&&e&&2===i?3:0)}px`,o.container.style.width=e?i*s+"px":""};e(),window.addEventListener("resize",e),o.container.style.transformOrigin="left",o.container.style.transform=r.axis?"rotate(90deg)":"",i.push(o)}n.append(o.container)}n.append(r)}static renderBoard(n,e){const t=[];for(let A=0;A<e.length;A++)for(let i=0;i<e[A].length;i++)y.makeField(n,e,A,i,t)}}const w=y;class b{constructor(){this.field=b.board()}placeShip(n,e,t,A=null){if(A){if(!this.isSpaceAvailable(n,e,t,A))return!1;let i=n,{length:r}=t;if(i+r>10)return!1;for(;r;){if(this.field[i][e]instanceof E)return!1;if(!this.field[i][e])return!1;this.field[i][e]=t,t.axis=!0,i++,r--}}else{if(!this.isSpaceAvailable(n,e,t))return!1;let A=e,{length:i}=t;if(A+i>10)return!1;for(;i;){if(this.field[n][A]instanceof E)return!1;if(!this.field[n][A])return!1;this.field[n][A]=t,A++,i--}}return!0}isSpaceAvailable(n,e,t,A=null){if(A){let A=n,{length:i}=t;if(A+i>10)return!1;for(;i;){if(this.field[A][e]instanceof E)return!1;if(!this.field[A][e])return!1;A++,i--}}else{let A=e,{length:i}=t;if(A+i>10)return!1;for(;i;){if(this.field[n][A]instanceof E)return!1;if(!this.field[n][A])return!1;A++,i--}}return!0}receiveAttack(n,e){const t=this.field[n][e];return!["missed","hit"].includes(t)&&(t instanceof E?(t.hit(),this.field[n][e]="hit"):this.field[n][e]="missed",this.field)}static board(){const n=[];for(let e=0;e<10;e++){const t=[];for(let n=0;n<10;n++)t.push([e,n]);n.push(t)}return n}}const C=b,x=t.p+"images/pan-vertical.svg",v=t.p+"images/pan-horizontal.svg",I=t(985)();class S{constructor(n){this.playerName=n,this.playerField=new C,this.opponentBoard=null,this.score=0,this.ships=[2,3,3,4,5].map((n=>new E(n))),this.shipAxis=null,this.selectedShipIndex=-1}set targetField(n){this.opponentBoard=n}refreshState(){this.playerField=new C,this.ships=[2,3,3,4,5].map((n=>new E(n)))}static async getUserInput(){return new Promise((n=>{n(I("Enter coordinates for the next ship (e.g., xCor yCor): "))}))}hoverPlacement(n){if(-1===this.selectedShipIndex)return;const{x:e,y:t}=n.dataset;let A=parseInt(e,10),i=parseInt(t,10);const{length:r}=this.ships[this.selectedShipIndex],o=this.playerField.isSpaceAvailable(A,i,this.ships[this.selectedShipIndex],this.shipAxis),s=o?1:null;n.classList.add(o?"good-placement":"bad-placement");const a=()=>this.shipAxis?A++:i++;for(let n=0;n<r;n++){const n=document.querySelector(`.shipPlacementBoard .grid-item[data-x='${A}'][data-y='${i}']`);if(a(),!n)break;s?n.classList.add("good-placement"):n.classList.add("bad-placement")}}static hoverPlacementRemove(){document.querySelectorAll(".good-placement, .bad-placement").forEach((n=>{n.classList.remove("good-placement","bad-placement")}))}updateShipsContainer(){const n=document.querySelector(".practice");n.innerHTML="",this.ships.forEach(((e,t)=>{const{shipImage:A}=e;A.classList.add("manualShipPlaceholders"),A.addEventListener("click",(()=>{this.selectedShipIndex=-1,document.querySelectorAll(".manualShipPlaceholders").forEach((n=>n.classList.remove("selected"))),A.classList.add("selected"),this.selectedShipIndex=t})),n.append(A)}))}updateShipsContainerOnClick(){const n=document.querySelector(".practice");Array.from(n.children)[this.selectedShipIndex].remove()}manualShipPlacement(){const n=document.getElementById("gameFields");return new Promise((e=>{const t=document.createElement("div");t.classList.add("manualShipPlacementContainer");const A=document.createElement("button");A.classList.add("axis-button");const i=document.createElement("img");i.classList.add("axisButtonSVG"),i.src=v,A.innerHTML="Axis: ",A.append(i),A.addEventListener("click",(()=>{this.shipAxis=null===this.shipAxis||null,i.src=null===this.shipAxis?v:x}));const r=document.createElement("div");r.classList.add("manualShipPlacementBoard");const o=document.createElement("div");o.classList.add("shipPlacementBoard"),o.style.display="grid",r.prepend(o);const s=document.createElement("div");s.classList.add("practice"),this.ships.forEach(((n,e)=>{const{shipImage:t}=n;t.classList.add("manualShipPlaceholders"),t.addEventListener("click",(()=>{this.selectedShipIndex=-1,document.querySelectorAll(".manualShipPlaceholders").forEach((n=>n.classList.remove("selected"))),t.classList.add("selected"),this.selectedShipIndex=e})),s.append(t)}));const a=document.createElement("div");a.classList.add("buttonsContainer");const c=document.createElement("button");c.classList.add("refreshButton"),c.innerHTML="REFRESH";const d=document.createElement("button");d.classList.add("randomButton"),d.innerHTML="RANDOM",a.append(d),a.append(c),r.append(a),r.append(s),w.renderBoard(o,this.playerField.field),t.prepend(A,r),n.classList.toggle("hidden"),n.prepend(t),this.refreshButton(),this.randomButton(o,e),this.sampleGridEventListeners(o,e)}))}static screenCleanUp(){document.querySelector(".manualShipPlacementContainer").remove()}randomButton(n,e){document.querySelector(".randomButton").addEventListener("click",(async()=>{document.querySelector(".practice").innerHTML="",n.innerHTML="",this.randomPlaceShip(),document.querySelector(".manualShipPlacementContainer").remove(),this.shipAxis=null,e()}))}refreshButtonDisplay(){const n=document.querySelector(".refreshButton");this.ships.length<=4&&(n.style.display="unset")}refreshButton(){const n=document.querySelector(".refreshButton");n.addEventListener("click",(()=>{if(5===this.ships.length)return;this.refreshState();const e=document.querySelector(".shipPlacementBoard");Array.from(e.children).filter((n=>!n.classList.contains("grid-item"))).forEach((n=>n.remove())),this.updateShipsContainer(),n.style.display="none"}))}sampleGridEventListeners(n,e){n.querySelectorAll(".grid-item").forEach((t=>{t.addEventListener("mouseover",(()=>this.hoverPlacement(t))),t.addEventListener("mouseout",(()=>S.hoverPlacementRemove(t))),t.addEventListener("click",(()=>{-1!==this.selectedShipIndex&&this.playerField.placeShip(parseInt(t.dataset.x,10),parseInt(t.dataset.y,10),this.ships[this.selectedShipIndex],this.shipAxis)&&(this.ships.splice(this.selectedShipIndex,1),this.updateShipsContainerOnClick(),this.updateShipsContainer(),this.refreshButtonDisplay(),this.selectedShipIndex=-1,S.hoverPlacementRemove(t),n.innerHTML="",w.renderBoard(n,this.playerField.field),0===this.ships.length?(document.querySelector(".manualShipPlacementContainer").remove(),this.shipAxis=null,e()):(this.sampleGridEventListeners(n,e),this.hoverPlacement(t)))}))}))}async placeShip(){for(let n=0;n<5;n++){const e=this.ships.pop();try{const t=await S.getUserInput(),[A,i]=t.trim().split(" ").map(Number);this.playerField.placeShip(A,i,e)?console.log("Ship placed successfully!"):(this.ships.push(e),console.error("Could not place ship"),n--)}catch(t){this.ships.push(e),console.error("Invalid input. Please enter valid coordinates."),n--}}return this.playerField}randomPlaceShip(){for(;this.ships.length;){const n=this.ships[Math.floor(Math.random()*this.ships.length)],e=this.ships.splice(n,1)[0];try{const n=Math.floor(10*Math.random()),t=Math.floor(10*Math.random()),A=Math.floor(10*Math.random())>4;this.playerField.placeShip(n,t,e,A)?console.log("Ship placed successfully!"):(this.ships.push(e),console.log("Could not place ship"))}catch(n){this.ships.push(e),console.log("Could not place ship")}}return this.playerField}}const k=S,M=class extends k{constructor(){super(),this.playerField=this.randomPlaceShip(),this.playerName="Computer"}refreshComputer(){this.refreshState(),this.playerField=this.randomPlaceShip()}computerField=()=>this.playerField;async computerAttack(){return new Promise((n=>{const e=()=>{const t=Math.floor(10*Math.random()),A=Math.floor(10*Math.random());this.opponentBoard.receiveAttack(t,A)?n({xCor:t,yCor:A}):e()};setTimeout(e,500)}))}},L=class{static async getUserBoardInput(n){return prompt(`${n}, do you want to place the ships, or have them randomly assigned! (Type 'Yes' to place ships, 'No' to randomly assign ships) `)}static async setPlayerBoard(n){return await n.manualShipPlacement(),n.playerField.field}},P=class{static async move(n){const e=document.getElementById("computerField");return new Promise((t=>{const A=i=>{const{target:r}=i;if(!r.classList.contains("used-item")&&i.target.classList.contains("grid-item")){const i=Array.from(r.parentNode.children).filter((n=>!n.classList.contains("overlay"))).indexOf(r),o=Math.floor(i/10),s=i%10,a=n.field[o][s];if(a instanceof E)if(a.hit(),a.isSunk()){const{shipId:n}=a;e.querySelector(`.overlay[data-ship-id="${n}"]`).style.display="revert"}else a.removeTestShot();n.receiveAttack(o,s);const c=document.createElement("div");c.classList.add(`shot-${n.field[o][s]}`),r.appendChild(c),r.classList.add("used-item"),e.removeEventListener("click",A);const d="hit"==`${n.field[o][s]}`;t(d)}};e.addEventListener("click",A)}))}};class F{static endGame(){document.getElementById("computerField").classList.add("game-over")}static updateRemainingShipsCount(n,e){const t="Computer"===n?"playerShipsRemaining":"compShipsRemaining",A=document.getElementById(t);A?A.innerHTML=e:console.error(`Element with ID '${t}' not found.`)}static sunkShipsUpdate(n,e){const{playerName:t}=n.activePlayer;F.updateRemainingShipsCount(t,e.size)}static boardCheck(n,e){const t=new Set(e.field.flat().filter((n=>n instanceof E)));F.sunkShipsUpdate(n,t),Array.from(t).every((n=>!0===n.sunk))&&(F.endGame(),n.isGameOver=!0)}static newGame(){document.getElementById("computerField").classList.remove("game-over"),document.querySelectorAll(".shipsRemaining").forEach((n=>{n.innerHTML=5}))}}const z=F,R=class{static async move(n,e){const t=document.getElementById("playerField");return new Promise((async A=>{const{xCor:i,yCor:r}=await n.computer.computerAttack(),o=10*i+r,s=Array.from(t.children).filter((n=>!n.classList.contains("overlay")))[o],a=document.createElement("div");a.classList.add(`shot-${e.field[i][r]}`),s.appendChild(a),s.classList.add("used-item"),A("hit"==`${e.field[i][r]}`)}))}},Y=class{constructor(){this.player=null,this.computer=new M,this.isGameOver=!1,this.activePlayer=null}async setPlayer(n){this.player||(this.player=new k(n)),this.player.playerField.field=await L.setPlayerBoard(this.player),this.activePlayer=this.player,this.player.targetField=this.computer.computerField(),this.computer.targetField=this.player.playerField}async playGame(){const n=document.getElementById("computerField");for(n.querySelectorAll(".overlay").forEach((n=>n.style.display="none"));!this.isGameOver;){const e=await this.performTurn();if(z.boardCheck(this,this.player.opponentBoard),this.isGameOver){this.endOfGame();break}e||this.switchTurns(),n.style.pointerEvents="auto"}return console.log(`${this.activePlayer.playerName} You Win!`)}async performTurn(){const n=document.getElementById("computerField");return this.activePlayer===this.player?P.move(this.player.opponentBoard):(n.style.pointerEvents="none",R.move(this,this.computer.opponentBoard))}switchTurns(){this.activePlayer=this.activePlayer===this.player?this.computer:this.player}endOfGame(){const n=document.getElementById("gameFields"),e=document.getElementById("endOfGameContainer"),t=document.getElementById("applauseField"),A=document.getElementById("playerScore"),i=document.getElementById("computerScore");this.activePlayer.score+=1,this.player.playerField=new C,this.computer=new M,n.classList.toggle("hidden"),n.querySelectorAll("*").forEach((n=>n.classList.add("hidden"))),e.classList.toggle("hidden"),t.textContent=this.activePlayer!==this.player?"You Lose!":"You Win!",A.textContent=`${this.player.playerName}: ${this.player.score}`,i.textContent=`${this.computer.playerName}: ${this.computer.score}`}resetGame(){this.player.refreshState(),this.computer.refreshComputer(),this.isGameOver=!1,z.newGame()}};(async()=>{let n,e;const t=document.getElementById("playerField"),A=document.getElementById("computerField"),i=document.getElementById("gameFields"),r=document.getElementById("endOfGameContainer"),o=document.querySelector("#playAgainButton"),s=document.querySelector("#endGameButton"),a=async()=>{n||=new Y,e||=await((n=null)=>new Promise((e=>{const t=document.getElementById("nameInput"),A=document.getElementById("nameInputFormButton"),i=document.getElementById("nameInputForm"),r={playerName:n},o=n=>{("click"===n.type||"keypress"===n.type&&"Enter"===n.key)&&(t.value.trim()?(t.setCustomValidity(""),i.classList.toggle("hidden"),r.playerName=t.value.split(" ").map((n=>n.charAt(0).toUpperCase()+n.slice(1))).join(" "),e(r)):(t.setCustomValidity("Please enter a name."),t.reportValidity()),n.preventDefault())};A.addEventListener("click",o),t.addEventListener("keypress",o)})))(e?.playerName),await n.setPlayer(e.playerName),i.classList.remove("hidden"),[t,A].forEach((n=>n.style.display="grid")),i.querySelectorAll("*").forEach((n=>n.classList.remove("hidden"))),(()=>{const e=n.player.playerField.field,i=n.computer.playerField.field;w.renderBoard(t,e),w.renderBoard(A,i)})(),n.playGame()};a(),o.addEventListener("click",(async()=>{[r].forEach((n=>n.classList.toggle("hidden"))),n.resetGame(),[t,A].forEach((n=>n.innerHTML="")),await a()})),s.addEventListener("click",(()=>{window.location.reload()}))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,